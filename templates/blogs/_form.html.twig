{# /*
<style>
	.chip-select {
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		border: 1px solid #ccc;
		padding: 5px;
		border-radius: 5px;
	}

	.selected-chips {
		display: flex;
		flex-wrap: wrap;
		gap: 5px;
	}

	.selected-chips .chip {
		display: flex;
		align-items: center;
		background-color: #ccc;
		color: #333;
		border-radius: 20px;
		padding: 5px 10px;
		margin-right: 5px;
	}

	.selected-chips .chip .close {
		margin-left: 5px;
		cursor: pointer;
	}

	input[type="text"] {
		flex: 1;
		border: none;
		outline: none;
		padding: 5px;
	}

	input[type="text"]::placeholder {
		color: #999;
	}
</style>
*/ #}
<link rel="stylesheet" href="{{ asset('assets/Blog/CSS/FormCss.css') }}" />

<div class="container">
	<div class="row">
		<div class="col">
			{% if blog_media != null %}
			<img
				src="{{ blog_media.getFilePath() }}"
				class="img-fluid blogImg"
				alt="Blog Post Image"
			/>
			{% else %}
			<img
				src="{{ asset('assets/Blog/img/default-product.png') }}"
				class="img-fluid blogImg"
				alt="Blog Post Image"
			/>
			{% endif %}
		</div>
		<div class="col">
			<div class="col-sm-12">
				{{ form_start(form, {'attr': {'class': 'form-floating','novalidate': 'novalidate'
				}}) }}
				<div class="form-group">
					{{ form_label(form.title, null, {'label_attr': {'class': 'form-label'
					}})}}
					{{ form_widget(form.title, {'attr': {'class': 'form-control', 'placeholder': 'Title', 'id': 'title'
					}}) }}
					<div class="form-error">
						{{ form_errors(form.title) }}
					</div>
				</div>

				<div class="form-group">
					{{ form_label(form.content, null, {'label_attr': {'class': 'form-label'
					}}) }}
					{{ form_widget(form.content, {'attr': {'class': 'form-control', 'placeholder': 'Content', 'id': 'content'
					}}) }}
					<div class="form-error">
						{{ form_errors(form.content) }}
					</div>
				</div>

				<div class="form-group">
					{{ form_label(form.category, null, {'label_attr': {'class': 'form-label'
					}}) }}
					{{ form_widget(form.category, {'attr': {'class': 'form-control select2', 'id': 'category'
					}}) }}
					<div class="form-error">
						{{ form_errors(form.category) }}
					</div>
				</div>

				<div class="form-group">
					{{ form_label(form.tags, null, {'label_attr': {'class': 'form-label'
					}})}} {#
					<div>
						<label for="chip-select">Select Chips:</label>
						<div class="chip-select">
							<div class="selected-chips"></div>
							<input type="text" id="chip-select" list="chip-options" />
							<datalist id="chip-options">
								{% for tag in tagsList %}
								<option value="{{ tag.name }}"></option>
								{% endfor %}
							</datalist>
						</div>
					</div>
					#}
					<div class="row g-3">
						<div class="col-auto">
							{{ form_widget(form.tags, {'attr': {'class': 'form-select' ,'id': 'tags','size':'3'
							}}) }}
							<div class="form-error">
								{{ form_errors(form.tags) }}
							</div>
						</div>
						<div class="col-auto">
							<div id="input-container" style="display: none">
								<div class="chip-select">
									{{ form_widget(form.addTags,{'attr': {'id': 'input-container','class': 'form-control addTagsInput','list':'chip-options'
									}}) }}
								</div>
							</div>
						</div>
						<div class="col-auto">
							<div class="selected-chips"></div>
						</div>
					</div>
					<label for="tagsChoice">Add other tags:</label>
					<input type="checkbox" name="addOther" id="tagsChoice" />
					<input type="hidden" name="addedTags" id="addedTags" />
				</div>

				<div class="form-group">
					{{ form_label(form.author, null, {'label_attr': {'class': 'form-label'
					}}) }}
					{{ form_widget(form.author, {'attr': {'class': 'form-control select2', 'id': 'author'
					}}) }}
				</div>

				<div class="form-group">
					{{ form_label(form.file, null, {'label_attr': {'class': 'form-label'
					}})}}
					{{ form_widget(form.file, {'attr': {'class': 'form-control blogImageFile', 'id': 'formFile'
					}}) }}
				</div>

				<button type="submit" class="btn btn-primary" id="submitBtn">
					{{ button_label|default('Post') }}
				</button>

				{{ form_end(form) }}
			</div>
		</div>
	</div>
</div>

{# //
<script>
	// 	const checkbox = document.querySelector("#tagsChoice");
	// 	const inputContainer = document.querySelector("#input-container");
	// 	const addTagsInput = document.querySelector(".addTagsInput");
	// 	const selectedChips = document.querySelector(".selected-chips");
	// 	const blogImage = document.querySelector(".blogImageFile");
	// 	const blogImg = document.querySelector(".blogImg");
	// 	let addedTags = document.querySelector("#addedTags");
	// 	let selectedValues = [];

	// 	blogImage.addEventListener("change", () => {
	// 		const file = blogImage.files[0];
	// 		const reader = new FileReader();

	// 		reader.addEventListener("load", function () {
	// 			blogImg.src = reader.result;
	// 		});

	// 		if (file) {
	// 			reader.readAsDataURL(file);
	// 		}
	// 	});

	// 	checkbox.addEventListener("change", (event) => {
	// 		if (event.target.checked) {
	// 			inputContainer.style.display = "block";
	// 		} else {
	// 			inputContainer.style.display = "none";
	// 		}
	// 	});

	// 	function addTags(selectedValues) {
	// 		let str = "";
	// 		selectedValues.forEach((value) => {
	// 			if (!str.includes(value)) {
	// 				str = str + `#${value}`;
	// 			}
	// 			addedTags.value = str;
	// 		});
	// 		// console.log("str: " + str);
	// 		// console.log("addedTags: " + addedTags.value);
	// 	}

	// 	addTagsInput.addEventListener("keydown", function (event) {
	// 		if (event.keyCode === 13) {
	// 			event.preventDefault();
	// 			const tag = addTagsInput.value.trim();
	// 			if (tag !== "") {
	// 				selectedValues.push(tag);
	// 				console.log(selectedValues);
	// 				addChip(tag);
	// 				addTags(selectedValues);
	// 				addTagsInput.value = "";
	// 			}
	// 		}
	// 	});

	// 	selectedChips.addEventListener("click", (event) => {
	// 		if (event.target.classList.contains("close")) {
	// 			const chip = event.target.parentNode;
	// 			const chipValue = chip.getAttribute("data-value");
	// 			const index = selectedValues.indexOf(chipValue);
	// 			selectedValues.splice(index, 1);
	// 			addTags(selectedValues);
	// 			selectedChips.removeChild(chip);
	// 			console.log(selectedValues);
	// 		}
	// 	});

	// 	function addChip(value) {
	// 		const chip = document.createElement("div");
	// 		chip.classList.add("chip");
	// 		chip.setAttribute("data-value", value);
	// 		chip.innerHTML = `
	// 		    <span>${value}</span>
	// 		    <span class="close">&times;</span>
	// 		  `;
	// 		selectedChips.appendChild(chip);
	// 	}

	// 	document.getElementById("submitBtn").addEventListener("click", () => {
	// 		const xhr = new XMLHttpRequest();
	// 		xhr.open("POST", "../../src/Controller/BlogsController.php");
	// 		xhr.setRequestHeader("Content-Type", "application/json");
	// 		xhr.send(JSON.stringify({ addedTags: selectedValues }));

	// 		xhr.onreadystatechange = function () {
	// 			if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {
	// 				console.log(xhr.responseText);
	// 			}
	// 		};
	// 	});
	//
</script>
#}

<script src="{{ asset('assets/Blog/JS/FormJS.js') }}"></script>
